/*
Deployment script for Demo.Cinema.DataBase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Demo.Cinema.DataBase"
:setvar DefaultFilePrefix "Demo.Cinema.DataBase"
:setvar DefaultDataPath "C:\Users\c.cap\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\c.cap\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[Cinema]...';


GO
CREATE TABLE [dbo].[Cinema] (
    [Id]    INT           IDENTITY (1, 1) NOT NULL,
    [Nom]   NVARCHAR (64) NOT NULL,
    [Ville] NVARCHAR (64) NOT NULL,
    CONSTRAINT [PK_Cinema] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Diffusion]...';


GO
CREATE TABLE [dbo].[Diffusion] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [Cinema_Id]     INT           NOT NULL,
    [Film_Id]       INT           NOT NULL,
    [DateDiffusion] DATETIME2 (7) NULL,
    CONSTRAINT [PK_Diffusion] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Film]...';


GO
CREATE TABLE [dbo].[Film] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Titre]      NVARCHAR (128) NOT NULL,
    [DateSortie] DATE           NOT NULL,
    CONSTRAINT [PK_Film] PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [UK_Film_Titre_DateSortie] UNIQUE NONCLUSTERED ([Titre] ASC, [DateSortie] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Diffusion_Cinema]...';


GO
ALTER TABLE [dbo].[Diffusion]
    ADD CONSTRAINT [FK_Diffusion_Cinema] FOREIGN KEY ([Cinema_Id]) REFERENCES [dbo].[Cinema] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Diffusion_Film]...';


GO
ALTER TABLE [dbo].[Diffusion]
    ADD CONSTRAINT [FK_Diffusion_Film] FOREIGN KEY ([Film_Id]) REFERENCES [dbo].[Film] ([Id]);


GO
PRINT N'Creating Procedure [dbo].[SP_Film_Insert]...';


GO
CREATE PROCEDURE [dbo].[SP_Film_Insert]
-- @date = variable pour stocker les données qui rentrent dans la fonction qui insérera dans la DB
	@titre NVARCHAR(128),
	@date DATE
AS
	INSERT INTO [Film] ([Titre],[DateSortie])
	VALUES (@titre, @date)
-- Return 0 est ajoutée automatiquement par Windows pour dire que tout s'est bien passé sinon retournera -1 
RETURN 0
-- Il suffira d'écrire dans l'ADO le nom de la procédure Stockée et les valeurs des variables @
-- Plus besoin de faire des requêtes SQL dans l'ADO
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

INSERT INTO [Cinema] ([Nom], [Ville]) VALUES ('Kinepolis','Bruxelles'),
                                            ('Kinepolis','Braine-l''Alleud'),
                                            ('Kinepolis','Liège'),
                                            ('Pathé Cinéma','Charleroi'),
                                            ('Eldorado','Namur'),
                                            ('UGC Toison d''Or','Bruxelles')

-- On peut utiliser les procédures stockées pour insérer un film
EXEC SP_Film_Insert @titre='Jurassic Park', @date='1993-06-16'
EXEC SP_Film_Insert @titre='Ghostbuster', @date='2021-12-01'
EXEC SP_Film_Insert @titre='Ghostbuster', @date='1984-01-01'
EXEC SP_Film_Insert @titre='Judy n''est pas là', @date='2021-12-15'
EXEC SP_Film_Insert @titre='Spiderman', @date='2021-12-15'
EXEC SP_Film_Insert @titre='Burn after reading', @date='2008-12-10'

INSERT INTO [Diffusion] ([DateDiffusion],[Cinema_Id],[Film_Id]) VALUES ('2021-12-15 11:00:00',1,5),
                                                                        ('2021-12-15 12:00:00',1,6),
                                                                        ('2021-12-16 12:30:00',1,4),
                                                                        ('2021-12-16 14:30:00',1,3),
                                                                        ('2021-12-16 20:30:00',1,4),
                                                                        ('2021-12-16 12:45:00',1,1),
                                                                        ('2021-12-16 12:30:00',2,4),
                                                                        ('2021-12-16 18:50:00',2,3),
                                                                        ('2021-12-16 12:30:00',2,2),
                                                                        ('2021-12-16 10:30:00',2,1),
                                                                        ('2021-12-16 12:30:00',3,1),
                                                                        ('2021-12-16 12:45:00',3,2),
                                                                        ('2021-12-16 11:30:00',3,3),
                                                                        ('2021-12-16 12:30:00',4,4),
                                                                        ('2021-12-16 12:45:00',4,5),
                                                                        ('2021-12-16 21:30:00',5,6),
                                                                        ('2021-12-16 20:30:00',5,6),
                                                                        ('2021-12-16 12:30:00',5,5),
                                                                        ('2021-12-16 22:30:00',6,4),
                                                                        ('2021-12-16 16:30:00',6,3),
                                                                        ('2021-12-16 13:30:00',6,2)
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
