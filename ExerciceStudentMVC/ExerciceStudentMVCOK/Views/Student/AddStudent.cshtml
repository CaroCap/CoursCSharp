@using Microsoft.AspNetCore.Mvc.ModelBinding
@using ExerciceStudentMVCOK.Models
@model StudentAddForm
@*Vérifier avec le IF que le modèle n'est pas null*@
@if (Model is not null)
{

    @*Pour avoir tous les messages d'erreur en haut de la page*@
    @if (!ViewContext.ModelState.IsValid)
    {
        <div>
            @Html.ValidationSummary(true, "Le formulaire contient " + ViewContext.ModelState.ErrorCount + " erreur(s)", new { @class = "text-danger", style = "border: 1px dashed red" })
        </div>
    }


    @*! dans le Form, il faut que le name de l'input soit le même que dans le Model*@
    @*les attributs required, minlength, maxlength, ... dans le html ne sont pas sécurisés mais peuvent aider l'utilisateur à l'encodage et faire une première barrière*@
    @using (Html.BeginForm(@*actionName: "AddStudent", controllerName: "Student", method: FormMethod.Post*@))
{
<div>
    @Html.LabelFor(m => m.Nom)
    @Html.EditorFor(m => m.Nom, new { htmlAttributes = new { minLength = 2, maxLength = 16, required = true } })
    @Html.ValidationMessageFor(m => m.Nom, null, new { @class = "text-danger" })
</div>
<div>
    @Html.LabelFor(m => m.Prenom)
    @Html.EditorFor(m => m.Prenom, new { htmlAttributes = new { minLength = 2, maxLength = 16, required = true } })
    @Html.ValidationMessageFor(m => m.Prenom, null, new { @class = "text-danger" })
</div>


<div>
    @Html.LabelFor(m => m.DateNaissance)
    @Html.EditorFor(m => m.DateNaissance, new { htmlAttributes = new { required = true } })
    @Html.ValidationMessageFor(m => m.DateNaissance, null, new { @class = "text-danger" })
</div>

@Html.DropDownListFor(m => m.Section_id, Model.Sections_IDs.Select(o => new SelectListItem { Value = o.ToString(), Text = o.ToString() }), "Sélectionnez une section")
@Html.ValidationMessageFor(m => m.Section_id, null, new { @class = "text-danger" })


@Html.DropDownListFor(m => m.Course_id, Model.Courses_IDs.Select(o => new SelectListItem { Value = o.ToString(), Text = o.ToString() }), "Sélectionnez un Cours")
@Html.ValidationMessageFor(m => m.Course_id, null, new { @class = "text-danger" })


<div>
    @Html.LabelFor(m => m.ResultatAnnuel)
    @Html.EditorFor(m => m.ResultatAnnuel, new { htmlAttributes = new { min = 0, max=20, required = true } })
    @Html.ValidationMessageFor(m => m.ResultatAnnuel, null, new { @class = "text-danger" })
</div>

<div>
    <input type="submit" value="Create new Student" />
</div>
}
}
else
{
    <div>Le modèle est null et non valide</div>
}